<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:task="http://www.springframework.org/schema/task"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
http://www.springframework.org/schema/context
http://www.springframework.org/schema/context/spring-context-3.0.xsd
       http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-3.0.xsd">

	<context:annotation-config />
	<context:component-scan base-package="ch.hszt.mdp.domain" />
	<task:annotation-driven />


	 <bean class="ch.hszt.mdp.web.UserListener" id="userListener"></bean>

	<bean id="userService" class="ch.hszt.mdp.service.UserServiceImpl">
		<property name="userDao" ref="userDao" />
		<property name="activityService" ref="activityService" />
	</bean>

	<bean id="activityService" class="ch.hszt.mdp.service.ActivityServiceImpl">
		<property name="activityDao" ref="activityDao" />
	</bean>

	<bean id="friendshipService" class="ch.hszt.mdp.service.FriendshipServiceImpl">
		<property name="friendshipDao" ref="friendshipDao" />
	</bean>

	<bean id="userDao" class="ch.hszt.mdp.dao.UserDaoImpl">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>

	<bean id="friendshipDao" class="ch.hszt.mdp.dao.FriendshipDaoImpl">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>

	<bean id="activityDao" class="ch.hszt.mdp.dao.ActivityDaoImpl">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>

	<bean id="hibernateTxManager"
		class="org.springframework.orm.hibernate3.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>
	
	
	<bean id="taskBirthdayDao" class="ch.hszt.mdp.dao.TaskBirthdayDao" />

	<bean id="taskBirthdayServiceImpl" class="org.springframework.scheduling.quartz.JobDetailBean">
		<property name="jobClass" value="ch.hszt.mdp.service.TaskBirthdayServiceImpl" />
		<property name="jobDataAsMap">
			<map>
				<entry key="taskBirthdayDao" value-ref="taskBirthdayDao" />
			</map>
		</property>

	</bean>

	<!-- <bean id="taskBirthdayServiceImpl" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean"> 
		<property name="targetObject" ref="runMeTask" /> <property name="targetMethod" 
		value="printMe" /> </bean> -->

	<!-- Simple Trigger -->
	<bean id="simpleTrigger" class="org.springframework.scheduling.quartz.SimpleTriggerBean">

		<property name="jobDetail" ref="taskBirthdayServiceImpl" />
		<property name="repeatInterval" value="5000" />
		<property name="startDelay" value="1000" />

	</bean>

	<!-- Cron Trigger 
	<bean id="cronTrigger" class="org.springframework.scheduling.quartz.CronTriggerBean">

		<property name="jobDetail" ref="taskBirthdayServiceImpl" />
		<property name="cronExpression" value="0/5 * * * * ?" />

	</bean>-->

	<bean class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
		<property name="jobDetails">
			<list>
				<ref bean="taskBirthdayServiceImpl" />
			</list>
		</property>

		<property name="triggers">
			<list>
				<ref bean="simpleTrigger" />
			</list>
		</property>
	</bean>
	<tx:annotation-driven transaction-manager="hibernateTxManager" />

	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="annotatedClasses">
			<list>
				<value>ch.hszt.mdp.domain.User</value>
				<value>ch.hszt.mdp.domain.Activity</value>
				<value>ch.hszt.mdp.domain.Friendship</value>
			</list>
		</property>
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">org.hibernate.dialect.MySQL5InnoDBDialect</prop>
				<prop key="hibernate.show_sql">false</prop>
				<prop key="hibernate.format_sql">true</prop>
				<prop key="hibernate.use_sql_comments">true</prop>
				<prop key="hibernate.cache.use_query_cache">false</prop>
				<prop key="hibernate.cache.use_second_level_cache">false</prop>
				<prop key="hibernate.generate_statistics">false</prop>
				<prop key="hibernate.cache.use_structured_entries">false</prop>
				<prop key="hibernate.connection.isolation">2</prop>
			</props>
		</property>
		<property name="configurationClass" value="org.hibernate.cfg.AnnotationConfiguration" />
	</bean>

	<bean id="dataSource" class="org.springframework.jndi.JndiObjectFactoryBean">
		<property name="jndiName" value="jdbc/JDBCDataSource"></property>
		<property name="resourceRef" value="true"></property>
	</bean>

	<!-- aspect to display a call-tree on the console -->
	<bean id="callTreeCollector" class="ch.hszt.mdp.util.IndentedLogging" />

	<aop:config>
		<aop:aspect id="callTreeHDHDataAop" ref="callTreeCollector">
			<aop:pointcut id="callTreePointcutHDHData"
				expression="execution(* ch.hszt.mdp.service.*.*(..))" />
			<aop:around pointcut-ref="callTreePointcutHDHData" method="loggingOperation" />
		</aop:aspect>
	</aop:config>

</beans>